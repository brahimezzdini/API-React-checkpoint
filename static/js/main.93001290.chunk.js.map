{"version":3,"sources":["UserList.js","App.js","reportWebVitals.js","index.js"],"names":["Users","props","getUsers","axios","get","then","respense","setState","users","data","state","this","className","class","scope","map","user","id","name","username","email","phone","website","company","catchPhrase","address","bs","street","suite","city","zipcode","geo","lat","lng","Component","App","href","UserList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAiFeA,EA7Ef,kDACM,WAAYC,GAAQ,IAAD,8BACb,cAAMA,IASZC,SAAW,WACLC,IAAMC,IAAI,8CACJC,MAAK,SAAAC,GACD,EAAKC,SAAS,CACTC,MAAOF,EAASG,WAX/B,EAAKC,MAAQ,CACNF,MAAO,IAJD,EADzB,qDAmBM,WACMG,KAAKT,aApBjB,oBAyBQ,WACI,OACI,mCACA,qBAAKU,UAAU,MAAf,SAEQ,wBAAOC,MAAM,oBAAb,UACA,gCACE,+BACE,oBAAIC,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,0BAGHH,KAAKD,MAAMF,MAAMO,KAAI,SAAAC,GAAI,OAC1B,gCACI,qBAAIH,MAAM,gBAAV,UACA,6BAAKG,EAAKC,KACV,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,WACV,6BAAKH,EAAKI,QACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,UACV,wCAAWN,EAAKO,QAAQL,KAAK,uBAA7B,gBACkBF,EAAKO,QAAQC,YAAY,uBAD3C,OAESR,EAAKS,QAAQC,MAEtB,0CAAaV,EAAKS,QAAQE,OAAO,uBAAjC,UACYX,EAAKS,QAAQG,MAAM,uBAD/B,SAEWZ,EAAKS,QAAQI,KAAK,uBAF7B,YAGcb,EAAKS,QAAQK,QAAQ,uBAHnC,QAIUd,EAAKS,QAAQM,IAAIC,IAJ3B,WAKUhB,EAAKS,QAAQM,IAAIE,0BA7DvD,GAA2BC,aCYZC,MAZf,WACE,OACE,qBAAKvB,UAAU,cAAf,SACE,yBAAQA,UAAU,YAAlB,UACA,oBAAIA,UAAU,mBAAd,yCACA,+BAAI,mBAAGwB,KAAK,4DAAR,mCAAJ,OAAuG,uBACvG,cAACC,EAAD,UCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.93001290.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport class Users extends Component {\r\n      constructor(props) {\r\n            super(props)\r\n      \r\n            this.state = {     \r\n                   users: [    \r\n                        \r\n                   ]\r\n            }\r\n      }\r\n      \r\n      getUsers = () => {  \r\n            axios.get('https://jsonplaceholder.typicode.com/users') \r\n                 .then(respense => {    \r\n                      this.setState({ \r\n                           users: respense.data               \r\n                      })\r\n                 })\r\n      }\r\n      componentDidMount(){  \r\n            this.getUsers();\r\n      }\r\n\r\n     \r\n      \r\n        render() {  \r\n            return (  \r\n                <>\r\n                <div className=\"row\">\r\n                   \r\n                        <table class=\"table table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th scope=\"col\">Id</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Username</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Phone</th>\r\n                            <th scope=\"col\">Website</th>\r\n                            <th scope=\"col\">Company</th>\r\n                            <th scope=\"col\">Address</th>\r\n                          </tr>\r\n                        </thead>\r\n                        {this.state.users.map(user => ( \r\n                        <tbody>\r\n                            <tr class=\"table-primary\">\r\n                            <td>{user.id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.username}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.phone}</td>\r\n                            <td>{user.website}</td>\r\n                            <td>Name: {user.company.name}<br/>\r\n                                CatchPhrase: {user.company.catchPhrase}<br/>\r\n                                Bs: {user.address.bs}\r\n                            </td>\r\n                            <td>Street: {user.address.street}<br/>\r\n                                Suite: {user.address.suite}<br/>\r\n                                City: {user.address.city}<br/>\r\n                                Zipcode: {user.address.zipcode}<br/>\r\n                                lat: {user.address.geo.lat} ,\r\n                                lng: {user.address.geo.lng}\r\n                            </td>\r\n                            \r\n                            \r\n                            </tr>\r\n                        </tbody>\r\n                       ))}\r\n                    </table>\r\n                 \r\n                </div>\r\n                </>\r\n                \r\n            )\r\n        }\r\n}\r\n\r\nexport default Users;"," \nimport './App.css';\nimport UserList from './UserList';\n\nfunction App() {\n  return (\n    <div className=\"text-center\">\n      <header className=\"container\">\n      <h1 className=\"text-center my-4\">AFFICHAGE DES DONNEES D'API</h1>\n      <h5><a href=\"https://github.com/brahimezzdini/API-React-checkpoint.git\">Source code on GITHUB</a> </h5><br/>\n      <UserList/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}